<!--suppress HttpUrlsUsage -->
<idea-plugin>

    <id>org.utbot.intellij.plugin.id</id>
    <name>UnitTestBot</name>
    <vendor>utbot.org</vendor>
    <depends>com.intellij.modules.platform</depends>

    <depends optional="true" config-file="withJava.xml">com.intellij.modules.java</depends>
    <depends optional="true" config-file="withKotlin.xml">org.jetbrains.kotlin</depends>
    <depends optional="true" config-file="withPython.xml">com.intellij.modules.python</depends>
    <depends optional="true" config-file="withGo.xml">org.jetbrains.plugins.go</depends>
    <depends optional="true" config-file="withAndroid.xml">org.jetbrains.android</depends>
    <depends optional="true" config-file="withIdeaMaven.xml">org.jetbrains.idea.maven</depends>

    <actions>
        <action id="org.utbot.intellij.plugin.ui.actions.GenerateTestsAction"
                class="org.utbot.intellij.plugin.ui.actions.GenerateTestsAction"
                text="Generate Tests with UnitTestBot..."
                description="Cover code with auto-generated tests">
            <add-to-group group-id="ProjectViewPopupMenu"/>
            <add-to-group group-id="GenerateGroup" anchor="after" relative-to-action="JavaGenerateGroup1"/>
            <keyboard-shortcut keymap="$default" first-keystroke="alt shift U"/>
            <keyboard-shortcut keymap="$default" first-keystroke="alt U" second-keystroke="alt T"/>
        </action>
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <projectConfigurable dynamic="true" parentId="tools" instance="org.utbot.intellij.plugin.settings.Configurable"
                                 id="org.utbot.intellij.plugin.settings.Configurable"
                                 displayName="UnitTestBot"/>
        <!--suppress PluginXmlValidity -->
        <projectService serviceImplementation="org.utbot.intellij.plugin.settings.Settings" preload="true"/>
        <registryKey defaultValue="false" description="Enable editing Kotlin test files" key="kotlin.ultra.light.classes.empty.text.range"/>
        <postStartupActivity implementation="org.utbot.intellij.plugin.ui.GotItTooltipActivity"/>
        <projectModelModifier implementation="org.androidstudio.plugin.util.UtAndroidGradleJavaProjectModelModifierWrapper" order="first"/>
        <projectModelModifier implementation="org.utbot.intellij.plugin.util.UtMavenProjectModelModifier" order="first"/>
        <projectModelModifier implementation="org.utbot.intellij.plugin.util.UtIdeaProjectModelModifier" order="first"/>
        <!--Documentation-->
        <customJavadocTagProvider implementation="org.utbot.intellij.plugin.javadoc.UtCustomJavaDocTagProvider"/>
        <lang.documentationProvider language="JAVA" order="first" implementationClass="org.utbot.intellij.plugin.javadoc.UtDocumentationProvider"/>
    </extensions>

    <!-- Minimum and maximum build of IDE compatible with the plugin -->
    <description>
        <![CDATA[
        UnitTestBot is the tool for automated unit test generation and precise code analysis.
        <br/><br/>
        Discover UnitTestBot key features in our latest release:
        <ul>
            <li>generating ready-to-use test cases — with valid inputs, method bodies, assertions, and comments</li>
            <li>maximizing <a href="https://en.wikipedia.org/wiki/Code_coverage">branch coverage</a> in <i>regression suite</i> while keeping the number of tests minimized</li>
            <li>finding deeply hidden code defects and expressing them as tests</li>
            <li>fine-tuned <a href="https://github.com/UnitTestBot/UTBotJava/wiki/Fine-tune-test-generation#mocking-settings">mocking</a>, including mocking static methods</li>
            <li>representing all the <a href="https://github.com/UnitTestBot/UTBotJava/wiki/Get-use-of-test-results#read-test-descriptions">test descriptions</a> in a human-readable format</li>
            <li>generating <a href="https://github.com/microsoft/sarif-tutorials/blob/main/README.md">SARIF</a> reports</li>
            <li>innovative symbolic execution engine combined with a smart fuzzing platform</li>
        </ul>
        UnitTestBot supports the latest JDKs, JUnit 4, JUnit 5, TestNG, Mockito and is suitable for all popular operational systems.
        <br/>
        Try <a href="https://www.utbot.org/demo/?language=Java&source=public%20class%20Recursion%20%7B%0A%0A%20%20public%20int%20fib(int%20n)%20%7B%0A%20%20%20%20if%20(n%20%3C%200)%20throw%20new%20IllegalArgumentException()%3B%0A%20%20%20%20if%20(n%20%3D%3D%200)%20return%200%3B%0A%20%20%20%20if%20(n%20%3D%3D%201)%20return%201%3B%0A%20%20%20%20%0A%20%20%20%20return%20fib(n%20-%201)%20%2B%20fib(n%20-%202)%3B%0A%20%20%7D%0A%7D%0A">UnitTestBot online demo</a> to see how it generates tests for your code in real time.
        <br/>
        Contribute to UnitTestBot via <a href="https://github.com/UnitTestBot/UTBotJava/blob/main/CONTRIBUTING.md">GitHub</a>.
        <br/>
        Found a bug? File an <a href="https://github.com/UnitTestBot/UTBotJava/issues">issue</a>.
        <br/>
        Have an idea? Start a <a href="https://github.com/UnitTestBot/UTBotJava/discussions">discussion</a>.
        ]]>
    </description>
    <change-notes>
        <![CDATA[
        Try out the latest UnitTestBot release — сheck the new features and improvements available for IntelliJ IDEA 2022.1–2022.2:
        <ul>
            <li>Automated unit test generation for Go code (supported for IntelliJ IDEA Ultimate)</li>
            <li>Major improvements to Python support: new fuzzing platform, redesigned type inference algorithm, support for generics and protocols, 10x faster performance when running functions</li>
            <li>Enhanced test generation for JavaScript: streamlined installation and configuration process, new fuzzing platform, improved UI, support for collections</li>
            <li>Symbolic execution improvements for generating Java/Kotlin tests: support for ARM architecture on macOS devices, better support for generics, support for virtual invokes on <i>enum</i> instances, processing <i>clinit</i> sections</li>
            <li>Mocking improvements for generating Java/Kotlin tests: symbolic mocks for popular but insignificant methods, assertions using <i>deep equality</i> for mocks</li>
            <li>Bug fixes and refactoring for the major components</li>
            <li>Documentation updates</li>
        </ul>
    ]]>
    </change-notes>    <extensions defaultExtensionNs="com.intellij">
        <globalInspection language="JAVA"
                          displayName="Errors detected by UnitTestBot"
                          groupPath="Java"
                          groupBundle="messages.InspectionsBundle"
                          groupKey="group.names.probable.bugs"
                          enabledByDefault="true"
                          level="ERROR"
                          implementationClass="org.utbot.intellij.plugin.inspection.UnitTestBotInspectionTool"/>
    </extensions>

</idea-plugin>
